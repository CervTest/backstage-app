app:
  title: Scaffolded Backstage App
  baseUrl: http://ec2-54-160-113-36.compute-1.amazonaws.com:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://ec2-54-160-113-36.compute-1.amazonaws.com:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    img-src: 
      # "'self'" and 'data' are from the backstage default but must be set since img-src is overriden
      - "'self'"
      - 'data:'
      # Allow your Jira instance for @roadiehq/backstage-plugin-jira
      - 'tracker.adaptavist.com'
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://ec2-54-160-113-36.compute-1.amazonaws.com:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  gitlab:
    - host: gitlab.adaptavist.net
      token: ${GITLAB_TOKEN}
      apiBaseUrl: https://gitlab.adaptavist.net/api/v4

proxy:
  '/jira/api':
    target: 'tracker.adaptavist.com'
    headers:
      Authorization:
        $env: Y3NhbmRlcnNAYWRhcHRhdmlzdC5jb206T0RFME5ESTNNekl6TXpZNU9xZlNHNGVmcDc5QTljbHhLTEp6YjRjd0EwZHI=
      Accept: 'application/json'
      Content-Type: 'application/json'
      X-Atlassian-Token: 'nocheck'
      User-Agent: "MY-UA-STRING"

  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers: {}

#scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

# Note that this section can be overridden if a higher priority config file is loaded
catalog:
  rules:
    - allow: [Component, System, API, Group, User, Resource, Location, Template]
  locations:
    - type: url
      target: https://gitlab.adaptavist.net/backstage/clients/draper/applications/devops-portal-applications/-/blob/main/jira-plugin-test-template.yml